version: "3.8"

networks:
  symfony-network:

volumes:
  symfony-data:

services:
  notification-service:
    build:
      context: ./notification
      dockerfile: Dockerfile
    command: composer install
    environment:
      - DATABASE_URL=mysql://root:test@db-service:3306/microservices_db
      - AMQP_DSN=amqp://user:password@rabbitmq-service:5672/%2f/messages
    volumes:
      - ./notification:/var/www/project/:cached
    networks:
      - symfony-network

  php-fpm:
    build:
      context: ./user/docker
      dockerfile: Dockerfile-php
    # command: composer install
    environment:
      - DATABASE_URL=mysql://root:test@db-service:3306/microservices_db
    volumes:
      - ./user:/var/www/project/:cached
    networks:
      - symfony-network
    container_name: php-fpm

  nginx-web:
    build:
      context: ./user/docker
      dockerfile: Dockerfile-nginx
    volumes:
      - ./user:/var/www/project/:cached
      - ./user/docker/build/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./user/docker/build/nginx/upstream.conf:/etc/nginx/conf.d/upstream.conf
    ports:
      - 8080:80
    depends_on:
      - db-service
      - php-fpm
    networks:
      - symfony-network

  db-service:
    image: mysql:8
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: microservices_db
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - symfony-data:/var/lib/mysql
      - ./user/docker/build/db/:/docker-entrypoint-initdb.d/
    networks:
      - symfony-network

  phpmyadmin-service:
    image: phpmyadmin/phpmyadmin
    links:
      - db-service:db
    ports:
      - 8081:80
    environment:
      PMA_HOST: db-service
      MYSQL_USER: root
      MYSQL_PASSWORD: test
    networks:
      - symfony-network

  rabbitmq-service:
    container_name: rabbitmq-service
    image: rabbitmq:management
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - symfony-network